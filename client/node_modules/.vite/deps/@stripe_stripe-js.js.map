{
  "version": 3,
  "sources": ["../../@stripe/stripe-js/dist/stripe.esm.js"],
  "sourcesContent": ["var V3_URL = 'https://js.stripe.com/v3';\r\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\r\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\r\nvar findScript = function findScript() {\r\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\r\n\r\n  for (var i = 0; i < scripts.length; i++) {\r\n    var script = scripts[i];\r\n\r\n    if (!V3_URL_REGEX.test(script.src)) {\r\n      continue;\r\n    }\r\n\r\n    return script;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nvar injectScript = function injectScript(params) {\r\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\r\n  var script = document.createElement('script');\r\n  script.src = \"\".concat(V3_URL).concat(queryString);\r\n  var headOrBody = document.head || document.body;\r\n\r\n  if (!headOrBody) {\r\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\r\n  }\r\n\r\n  headOrBody.appendChild(script);\r\n  return script;\r\n};\r\n\r\nvar registerWrapper = function registerWrapper(stripe, startTime) {\r\n  if (!stripe || !stripe._registerWrapper) {\r\n    return;\r\n  }\r\n\r\n  stripe._registerWrapper({\r\n    name: 'stripe-js',\r\n    version: \"2.2.0\",\r\n    startTime: startTime\r\n  });\r\n};\r\n\r\nvar stripePromise = null;\r\nvar loadScript = function loadScript(params) {\r\n  // Ensure that we only attempt to load Stripe.js at most once\r\n  if (stripePromise !== null) {\r\n    return stripePromise;\r\n  }\r\n\r\n  stripePromise = new Promise(function (resolve, reject) {\r\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\r\n      // Resolve to null when imported server side. This makes the module\r\n      // safe to import in an isomorphic code base.\r\n      resolve(null);\r\n      return;\r\n    }\r\n\r\n    if (window.Stripe && params) {\r\n      console.warn(EXISTING_SCRIPT_MESSAGE);\r\n    }\r\n\r\n    if (window.Stripe) {\r\n      resolve(window.Stripe);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      var script = findScript();\r\n\r\n      if (script && params) {\r\n        console.warn(EXISTING_SCRIPT_MESSAGE);\r\n      } else if (!script) {\r\n        script = injectScript(params);\r\n      }\r\n\r\n      script.addEventListener('load', function () {\r\n        if (window.Stripe) {\r\n          resolve(window.Stripe);\r\n        } else {\r\n          reject(new Error('Stripe.js not available'));\r\n        }\r\n      });\r\n      script.addEventListener('error', function () {\r\n        reject(new Error('Failed to load Stripe.js'));\r\n      });\r\n    } catch (error) {\r\n      reject(error);\r\n      return;\r\n    }\r\n  });\r\n  return stripePromise;\r\n};\r\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\r\n  if (maybeStripe === null) {\r\n    return null;\r\n  }\r\n\r\n  var stripe = maybeStripe.apply(undefined, args);\r\n  registerWrapper(stripe, startTime);\r\n  return stripe;\r\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n\r\n// own script injection.\r\n\r\nvar stripePromise$1 = Promise.resolve().then(function () {\r\n  return loadScript(null);\r\n});\r\nvar loadCalled = false;\r\nstripePromise$1[\"catch\"](function (err) {\r\n  if (!loadCalled) {\r\n    console.warn(err);\r\n  }\r\n});\r\nvar loadStripe = function loadStripe() {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n\r\n  loadCalled = true;\r\n  var startTime = Date.now();\r\n  return stripePromise$1.then(function (maybeStripe) {\r\n    return initStripe(maybeStripe, args, startTime);\r\n  });\r\n};\r\n\r\nexport { loadStripe };\r\n"],
  "mappings": "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",
  "names": ["findScript", "injectScript", "registerWrapper", "loadScript", "initStripe", "loadStripe"]
}
